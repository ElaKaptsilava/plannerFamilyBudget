services:
  server:
    restart: unless-stopped
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    volumes:
      - static_volume:/app/core/django_static
      - ..:/app
    ports:
      - "8000:8000"
    command: python core/manage.py runserver 0.0.0.0:8000
    environment:
      DEBUG: "True"
      CELERY_BROKER_URL: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
      DJANGO_DB: postgresql
      POSTGRES_HOST: db
      POSTGRES_NAME: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      celery_worker:
        condition: service_started
      celery_beat:
        condition: service_started
  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 30s
      retries: 6
  redis:
    image: redis:latest
    restart: unless-stopped
    expose:
      - 6379
  celery_worker:
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    hostname: worker
    entrypoint: celery
    command: worker --loglevel=info
    volumes:
      - ..:/app
    depends_on:
      - redis
    environment:
      DEBUG: "True"
      DJANGO_DB: postgresql
      POSTGRES_HOST: db
      POSTGRES_NAME: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_PORT: 5432
      CELERY_BROKER_URL: "redis://redis:6379/0"
      DJANGO_SETTINGS_MODULE: "core.settings"
    restart: unless-stopped
  celery_beat:
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    hostname: beat
    entrypoint: celery
    command: beat --loglevel=info
    volumes:
      - ..:/app
    depends_on:
      - redis
    environment:
      DEBUG: "True"
      DJANGO_DB: postgresql
      POSTGRES_HOST: db
      POSTGRES_NAME: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_PORT: 5432
      CELERY_BROKER_URL: "redis://redis:6379/0"
      DJANGO_SETTINGS_MODULE: "core.settings"
    restart: unless-stopped
    expose:
      - 5555
volumes:
  static_volume: { }
  postgres_data: { }

